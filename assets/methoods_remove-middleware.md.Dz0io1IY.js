import{_ as a,c as i,o as s,ae as t}from"./chunks/framework.Cd-3tpCq.js";const k=JSON.parse('{"title":"Метод removeMiddleware","description":"","frontmatter":{},"headers":[],"relativePath":"methoods/remove-middleware.md","filePath":"methoods/remove-middleware.md"}'),l={name:"methoods/remove-middleware.md"};function d(r,e,n,h,o,p){return s(),i("div",null,e[0]||(e[0]=[t('<h1 id="метод-removemiddleware" tabindex="-1">Метод <code>removeMiddleware</code> <a class="header-anchor" href="#метод-removemiddleware" aria-label="Permalink to &quot;Метод `removeMiddleware`&quot;">​</a></h1><p>Метод <code>removeMiddleware</code> позволяет удалить зарегистрированное middleware по имени или удалить все middleware, если имя не указано.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeMiddleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string): HttpClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="параметры" tabindex="-1">Параметры <a class="header-anchor" href="#параметры" aria-label="Permalink to &quot;Параметры&quot;">​</a></h2><ul><li><strong>name</strong> (строка, необязательно) — имя middleware, которое нужно удалить. <ul><li>Если не указано, будут удалены <strong>все middleware</strong>.</li></ul></li></ul><h2 id="возвращаемое-значение" tabindex="-1">Возвращаемое значение <a class="header-anchor" href="#возвращаемое-значение" aria-label="Permalink to &quot;Возвращаемое значение&quot;">​</a></h2><p>Текущий экземпляр <code>HttpClient</code> без указанного middleware или без всех middleware.</p><h2 id="особенности" tabindex="-1">Особенности <a class="header-anchor" href="#особенности" aria-label="Permalink to &quot;Особенности&quot;">​</a></h2><ul><li>В режиме разработки (если <code>NODE_ENV !== &#39;production&#39;</code>) метод выбрасывает ошибку, если указанное middleware не найдено.</li><li>Метод <strong>мутирует текущий экземпляр</strong>. Если необходимо сохранить оригинал, воспользуйтесь методом <a href="./copy.html"><code>copy()</code></a>.</li></ul><h2 id="пример-удаление-одного-middleware" tabindex="-1">Пример: удаление одного middleware <a class="header-anchor" href="#пример-удаление-одного-middleware" aria-label="Permalink to &quot;Пример: удаление одного middleware&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeMiddleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auth&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="пример-удаление-всех-middleware" tabindex="-1">Пример: удаление всех middleware <a class="header-anchor" href="#пример-удаление-всех-middleware" aria-label="Permalink to &quot;Пример: удаление всех middleware&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeMiddleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="обработка-ошибок" tabindex="-1">Обработка ошибок <a class="header-anchor" href="#обработка-ошибок" aria-label="Permalink to &quot;Обработка ошибок&quot;">​</a></h2><p>В режиме разработки будет выброшена ошибка, если вы попытаетесь удалить middleware, которого не существует:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeMiddleware</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;not-exist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ Ошибка: Middleware not-exist is not registered in your http client instance</span></span></code></pre></div><h2 id="рекомендации" tabindex="-1">Рекомендации <a class="header-anchor" href="#рекомендации" aria-label="Permalink to &quot;Рекомендации&quot;">​</a></h2><ul><li>Перед удалением middleware полезно проверять его наличие через <code>client.middlewares</code>.</li><li>Используйте уникальные имена для всех middleware, чтобы избежать путаницы.</li></ul>',18)]))}const m=a(l,[["render",d]]);export{k as __pageData,m as default};
